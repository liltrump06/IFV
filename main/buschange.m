function cellInfo = buschange(varargin) 
% BUSCHANGE returns a cell array containing bus object information 
% 
% Optional Input: 'false' will suppress a call to Simulink.Bus.cellToObject 
%                 when the MATLAB file is executed. 
% The order of bus element attributes is as follows:
%   ElementName, Dimensions, DataType, Complexity, SamplingMode, DimensionsMode, Min, Max, DocUnits, Description 

suppressObject = false; 
if nargin == 1 && islogical(varargin{1}) && varargin{1} == false 
    suppressObject = true; 
elseif nargin > 1 
    error('Invalid input argument(s) encountered'); 
end 

cellInfo = { ... 
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_ApplyJointTorque', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/ApplyJointTorque'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'model_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('PrimitiveStringType=string:IsVarLen=1')}; ...
{'joint_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('PrimitiveStringType=string:IsVarLen=1')}; ...
{'index', 1, 'uint32', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'effort', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'duration', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Time', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Time')}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_Axis', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/Axis'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'xyz', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_PointArray', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/PointArray')}; ...
{'limit_lower', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'limit_upper', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'limit_effort', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'limit_velocity', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'damping', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'friction', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'use_parent_model_frame', 128, 'boolean', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_JointState', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/JointState'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'model_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'joint_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'joint_id', 1, 'uint32', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'joint_position', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'joint_velocity', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'joint_type', 1, 'int32', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'parent_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'parent_id', 1, 'uint32', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'child_name', 128, 'uint8', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'child_id', 1, 'uint32', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'initial_anchor_pose', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Pose', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Pose')}; ...
{'world_pose', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Pose', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Pose')}; ...
{'parent_world_pose', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Pose', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Pose')}; ...
{'axis', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Axis', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Axis')}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_Point', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/Point'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'x', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'y', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'z', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_PointArray', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/PointArray'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'x', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'y', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
{'z', 128, 'double', 'real', 'Sample', 'Variable', [], [], '', sprintf('IsVarLen=1')}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_Pose', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/Pose'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'position', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Point', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Point')}; ...
{'orientation', 1, 'Bus: Gazebo_SL_Bus_gazebo_msgs_Quaternion', 'real', 'Sample', 'Fixed', [], [], '', sprintf('MsgType=gazebo_msgs/Quaternion')}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_Quaternion', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/Quaternion'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'x', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'y', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'z', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'w', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
    } ...
  } ...
  { ... 
    'Gazebo_SL_Bus_gazebo_msgs_Time', ... 
    '', ... 
    sprintf('MsgType=gazebo_msgs/Time'), ... 
    'Auto', ... 
    '-1', ... 
    '0', {... 
{'seconds', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
{'nano_seconds', 1, 'double', 'real', 'Sample', 'Fixed', [], [], '', ''}; ...
    } ...
  } ...
}'; 

if ~suppressObject 
    % Create bus objects in the MATLAB base workspace 
    Simulink.Bus.cellToObject(cellInfo) 
end 
